/**
 * https://bscscan.com/tx/0xbe858d61bee12ad2acd28306ac8325a18a73127c7fcf24a27149acc37b4f6e53
 * 
 * https://bscscan.com/address/0x1a0a18ac4becddbd6389559687d1a73d8927e416
 * 
 * Decoder/Encoder: https://github.com/Elnaril/uniswap-universal-router-decoder
 * 
 * Function: execute(bytes commands,bytes[] inputs,uint256 deadline)
    MethodID: 0x3593564c
    [0]:  0000000000000000000000000000000000000000000000000000000000000060
    [1]:  00000000000000000000000000000000000000000000000000000000000000a0
    [2]:  0000000000000000000000000000000000000000000000000000000067b1eb8a
    [3]:  0000000000000000000000000000000000000000000000000000000000000002
    [4]:  0a00000000000000000000000000000000000000000000000000000000000000
    [5]:  0000000000000000000000000000000000000000000000000000000000000002
    [6]:  0000000000000000000000000000000000000000000000000000000000000040
    [7]:  00000000000000000000000000000000000000000000000000000000000001c0
    [8]:  0000000000000000000000000000000000000000000000000000000000000160
    [9]:  00000000000000000000000055d398326f99059ff775485246999027b3197955
    [10]: 000000000000000000000000ffffffffffffffffffffffffffffffffffffffff
    [11]: 0000000000000000000000000000000000000000000000000000000067d973d9
    [12]: 0000000000000000000000000000000000000000000000000000000000000002
    [13]: 0000000000000000000000001a0a18ac4becddbd6389559687d1a73d8927e416
    [14]: 0000000000000000000000000000000000000000000000000000000067b1ede1
    [15]: 00000000000000000000000000000000000000000000000000000000000000e0
    [16]: 0000000000000000000000000000000000000000000000000000000000000041
    [17]: ceb1477d514fc4357d9637dc7de2504abd39d5f62e60c32082f109a0e4601c93
    [18]: 3eb7b0950f85b3e1358ce1a9ff0ce7a1e1dc3fd892944bca0b7ba4416295db9e
    [19]: 1b00000000000000000000000000000000000000000000000000000000000000
    [20]: 0000000000000000000000000000000000000000000000000000000000000120
    [21]: 000000000000000000000000b54e978a34af50228a3564662db6005e9fb04f5a
    [22]: 000000000000000000000000000000000000000000000012f939c99edab80000
    [23]: 0000000000000000000000000000000000000000000005a28fd158f78fbc97f3
    [24]: 00000000000000000000000000000000000000000000000000000000000000a0
    [25]: 0000000000000000000000000000000000000000000000000000000000000001
    [26]: 0000000000000000000000000000000000000000000000000000000000000042
    [27]: 55d398326f99059ff775485246999027b3197955000064bb4cdb9cbd36b01bd1
    [28]: cbaebf2de08d9173bc095c002710a18bbdcd86e4178d10ecd9316667cfe4c4aa
    [29]: 8717000000000000000000000000000000000000000000000000000000000000

 *  #	Name	Type	Data
    0	commands	bytes	0x0a00
    1	inputs	bytes[]	0x00000000000000000000000055d398326f99059ff775485246999027b3197955000000000000000000000000ffffffffffffffffffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000000067d973d900000000000000000000000000000000000000000000000000000000000000020000000000000000000000001a0a18ac4becddbd6389559687d1a73d8927e4160000000000000000000000000000000000000000000000000000000067b1ede100000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000041ceb1477d514fc4357d9637dc7de2504abd39d5f62e60c32082f109a0e4601c933eb7b0950f85b3e1358ce1a9ff0ce7a1e1dc3fd892944bca0b7ba4416295db9e1b00000000000000000000000000000000000000000000000000000000000000
    0x000000000000000000000000b54e978a34af50228a3564662db6005e9fb04f5a000000000000000000000000000000000000000000000012f939c99edab800000000000000000000000000000000000000000000000005a28fd158f78fbc97f300000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000004255d398326f99059ff775485246999027b3197955000064bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c002710a18bbdcd86e4178d10ecd9316667cfe4c4aa8717000000000000000000000000000000000000000000000000000000000000
    2	deadline	uint256	1739713418
 * 
 */

/**
 * Commands reference: https://docs.uniswap.org/contracts/universal-router/technical-reference#command
 * 
 * 0x0a: PERMIT2_PERMIT
 * 
 * IAllowanceTransfer.PermitSingle
 * 
 * 0x
 * 00000000000000000000000055d398326f99059ff775485246999027b3197955   address(token): USDT
 * 000000000000000000000000ffffffffffffffffffffffffffffffffffffffff   uint160(amount): infinity
 * 0000000000000000000000000000000000000000000000000000000067d973d9   uint48(expiration): 1742304217 2025-03-18T13:23:37Z
 * 0000000000000000000000000000000000000000000000000000000000000002   uint48(nonce): 2
 * 0000000000000000000000001a0a18ac4becddbd6389559687d1a73d8927e416   address(spender): PancakeSwap: Universal Router
 * 0000000000000000000000000000000000000000000000000000000067b1ede1   uint256(sigDeadline): 1739714017 2025-02-16T13:53:37Z
 * 00000000000000000000000000000000000000000000000000000000000000e0
 * 0000000000000000000000000000000000000000000000000000000000000041   
 * ceb1477d514fc4357d9637dc7de2504abd39d5f62e60c32082f109a0e4601c93   sig.r
 * 3eb7b0950f85b3e1358ce1a9ff0ce7a1e1dc3fd892944bca0b7ba4416295db9e   sig.s
 * 1b00000000000000000000000000000000000000000000000000000000000000   sig.v
 * 
 * 0x00: V3_SWAP_EXACT_IN
 * 0x
 * 000000000000000000000000b54e978a34af50228a3564662db6005e9fb04f5a   address(recipient): me
 * 000000000000000000000000000000000000000000000012f939c99edab80000   uint256(amountIn): 350 e18
 * 0000000000000000000000000000000000000000000005a28fd158f78fbc97f3   uint256(amountOutMin): 26610.56811632702 e18
 * 00000000000000000000000000000000000000000000000000000000000000a0   bytes(path) <- pointer
 * 0000000000000000000000000000000000000000000000000000000000000001   bool(payerIsUser): true
 * 0000000000000000000000000000000000000000000000000000000000000042   bytes(path): length = 0x42
 * 55d398326f99059ff775485246999027b3197955     address(): $BSC-USD
 * 000064                                       uint256(fee): 0x64 = 100, 1%%
 * bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c     address(): $WBNB
 * 002710                                       uint256(fee): 0x2710 = 10000, 1%
 * a18bbdcd86e4178d10ecd9316667cfe4c4aa8717     address(): $BNBXBT
 * 000000000000000000000000000000000000000000000000000000000000
 * 
 * 
 * 0x
 * 3593564c
 * 0000000000000000000000000000000000000000000000000000000000000060 pointer-commands
 * 00000000000000000000000000000000000000000000000000000000000000a0 pointer-inputs
 * 000000000000000000000000000000000000000000000000000000000aba9500 deadline
 * 0000000000000000000000000000000000000000000000000000000000000001 length-commands
 * 0000000000000000000000000000000000000000000000000000000000000000 0x00 (V3_SWAP_EXACT_IN)
 * 0000000000000000000000000000000000000000000000000000000000000001 length-inputs
 * 0000000000000000000000000000000000000000000000000000000000000020
 * 0000000000000000000000000000000000000000000000000000000000000100
 * 0000000000000000000000000000000000000000000000000000000000000001
 * 00000000000000000000000000000000000000000000000000000000000493e0 amountIn
 * 0000000000000000000000000000000000000000000000000000000000000000 amountOutMin
 * 00000000000000000000000000000000000000000000000000000000000000a0 pointer-path
 * 0000000000000000000000000000000000000000000000000000000000000001 payerIsUser
 * 000000000000000000000000000000000000000000000000000000000000002b length-path
 * a18bbdcd86e4178d10ecd9316667cfe4c4aa8717
 * 002710
 * bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c
 * 000000000000000000000000000000000000000000
 * 
 */

import { TradeType } from '@uniswap/sdk-core'
import { Trade as V2TradeSDK } from '@uniswap/v2-sdk'
import { Trade as V3TradeSDK } from '@uniswap/v3-sdk'
import { MixedRouteTrade, MixedRouteSDK, Trade as RouterTrade } from '@uniswap/router-sdk'

async function main() {

  // const options = { slippageTolerance, recipient }
  // const routerTrade = new RouterTrade({ v2Routes, v3Routes, mixedRoutes, tradeType: TradeType.EXACT_INPUT })
  // // Use the raw calldata and value returned to call into Universal Swap Router contracts
  // const { calldata, value } = SwapRouter.swapCallParameters(routerTrade, options)

  

}

main()